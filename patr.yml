kind: Pipeline
version: v1
name: test-pipeline
services:
  - name: db1
    image: postgres
    env: 
      - name: POSTGRES_PASSWORD
        value_from_secret: postgres_pass
    port: 5432
    commands: |
      postgres
steps:
  - name: check-postgres
    image: alpine
    env: 
      - name: PGHOST
        value: db1
      - name: PGPORT
        value: "5432"
      - name: PGDATABASE
        value: postgres
      - name: PGUSER
        value: postgres
      - name: POSTGRES_PASSWORD
        value_from_secret: postgres_pass
    commands: |
      apk add postgresql-client
      echo $POSTGRES_PASSWORD
      # try 5 times with 2 sec interval
      for i in {1..5}
      do
      if [ pg_isready ]; then
        echo 'pg alive';
        exit 0;
      fi  
        sleep 2;
      done
      echo 'pg not alive';
      exit 1;
  - name: postgres-insert-values
    image: alpine
    env: 
      - name: PGHOST
        value: db1
      - name: PGPORT
        value: "5432"
      - name: PGDATABASE
        value: postgres
      - name: PGUSER
        value: postgres
      - name: POSTGRES_PASSWORD
        value_from_secret: postgres_pass
    commands: |
      apk add postgresql-client
      psql -c "CREATE TABLE temp(id SERIAL PRIMARY KEY, id_val INT);"
      psql -c "INSERT INTO temp(id_val) values (1), (2), (3);"
  - name: cargo-build
    image: "rust:1"
    commands: cargo build
  - name: cargo-clippy
    image: "rust:1"
    commands:
      - rustup component add clippy
      - cargo clippy
  - name: cargo-fmt
    image: "rust:1"
    commands: |
      rustup component add rustfmt
      cargo fmt -v
  - name: postgres-select-values
    image: alpine
    env: 
      - name: PGHOST
        value: db1
      - name: PGPORT
        value: "5432"
      - name: PGDATABASE
        value: postgres
      - name: PGUSER
        value: postgres
      - name: POSTGRES_PASSWORD
        value_from_secret: postgres_pass
    commands: |
      apk add postgresql-client
      psql -c "SELECT * from temp;"
      
